// <auto-generated />
using FleetManager.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FleetManager.Infrastructure.Migrations
{
    [DbContext(typeof(FleetManagerDatabaseContext))]
    partial class FleetManagerDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FleetManager.Domain.Entities.Vehicle", b =>
                {
                    b.Property<string>("ChassisSeries")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("ChassisNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleType")
                        .HasColumnType("int");

                    b.HasKey("ChassisSeries", "ChassisNumber");

                    b.ToTable("Vehicles");

                    b.HasDiscriminator<int>("VehicleType").HasValue(0);

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("FleetManager.Domain.Entities.Bus", b =>
                {
                    b.HasBaseType("FleetManager.Domain.Entities.Vehicle");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("FleetManager.Domain.Entities.Car", b =>
                {
                    b.HasBaseType("FleetManager.Domain.Entities.Vehicle");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("FleetManager.Domain.Entities.Truck", b =>
                {
                    b.HasBaseType("FleetManager.Domain.Entities.Vehicle");

                    b.HasDiscriminator().HasValue(1);
                });
#pragma warning restore 612, 618
        }
    }
}
